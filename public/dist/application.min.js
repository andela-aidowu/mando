"use strict";var ApplicationConfiguration=function(){var applicationModuleName="andonation",applicationModuleVendorDependencies=["ngResource","toaster","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","youtube-embed"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("campaign"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("campaign").config(["$stateProvider","datepickerConfig","$sceDelegateProvider",function($stateProvider,datepickerConfig,$sceDelegateProvider){datepickerConfig.startingDay="1",$stateProvider.state("addCampaign",{url:"/campaign/add",templateUrl:"modules/campaigns/views/addCampaign.client.view.html"}).state("editCampaign",{url:"/campaign/:campaignid/edit",templateUrl:"modules/campaigns/views/editCampaign.client.view.html"}).state("viewCampaign",{url:"/campaign/:campaignid",templateUrl:"modules/campaigns/views/viewCampaign.client.view.html"}).state("userCampaigns",{url:"/campaigns/:userid",templateUrl:"modules/campaigns/views/userCampaigns.client.view.html"}),$sceDelegateProvider.resourceUrlWhitelist(["**"])}]),angular.module("campaign").controller("addCampaignCtrl",["$scope","toaster","backendService","$location","Authentication","youtubeEmbedUtils",function($scope,toaster,backendService,$location,Authentication,youtubeEmbedUtils){$scope.authentication=Authentication,$scope.campaign={},$scope.minDate=moment().add(1,"days"),$scope.maxDate=moment().add(30,"days"),$scope.authentication.user||$location.path("/"),$scope.addCampaign=function(){$scope.campaign.youtubeUrl=youtubeEmbedUtils.getIdFromURL($scope.campaign.youtubeUrl),backendService.addCampaign($scope.campaign).success(function(data){toaster.pop("success",$scope.campaign.title,"Campaign created successfully"),$location.path("/campaign/"+data._id)}).error(function(error){$scope.error=error})},$scope.validateYoutubeUrl=function(url,isValid){if(!isValid)return void($scope.youtubeError="Please enter a valid youtube Url");var youtubeId=youtubeEmbedUtils.getIdFromURL(url);return youtubeId===url?void($scope.youtubeError="Please enter a valid youtube URL"):void backendService.checkYouTubeUrl(youtubeId).success(function(){$scope.youtubeError=""}).error(function(error){$scope.youtubeError=error})},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("campaign").controller("editCampaignCtrl",["$scope","toaster","backendService","$location","Authentication","$stateParams","youtubeEmbedUtils",function($scope,toaster,backendService,$location,Authentication,$stateParams,youtubeEmbedUtils){$scope.authentication=Authentication,$scope.authentication.user||$location.path("/"),$scope.campaign={_id:$stateParams.campaignid},backendService.getCampaign($scope.campaign).success(function(data){$scope.authentication.user._id!==data.createdBy._id&&$location.path("/campaign/"+data._id),$scope.minDate=moment(data.created),$scope.maxDate=moment(data.created).add(30,"days"),$scope.campaign=data,$scope.campaign.youtubeUrl="https://www.youtube.com/watch?v="+data.youtubeUrl}).error(function(err){toaster.pop("error","An Error Occurred"+err)}),$scope.editCampaign=function(){delete $scope.campaign.createdBy,delete $scope.campaign.created,$scope.campaign.youtubeUrl=youtubeEmbedUtils.getIdFromURL($scope.campaign.youtubeUrl),backendService.updateCampaign($scope.campaign).success(function(data){toaster.pop("success","Campaign Edited Successfully"),$location.path("/campaign/"+data._id)}).error(function(err){$scope.error=err,toaster.pop("error","An Error Occurred:"+err)})},$scope.validateYoutubeUrl=function(url){var youtubeId=youtubeEmbedUtils.getIdFromURL(url);return youtubeId===url?void($scope.youtubeError="Please enter a valid youtube URL"):void backendService.checkYouTubeUrl(youtubeId).success(function(){$scope.youtubeError=""}).error(function(error){$scope.youtubeError=error})},$scope.deleteCampaign=function(){var confirmMsg=confirm("Do you want to delete this Campaign?");confirmMsg===!0&&backendService.deleteCampaign($scope.campaign).success(function(){toaster.pop("success",$scope.campaign.title,"Campaign deleted successfully"),$location.path("/campaigns/:userId"),console.log("deleted")}).error(function(){console.log("error")})},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0}}]),angular.module("campaign").controller("userCampaignsCtrl",["$scope","backendService","$location","Authentication","$stateParams",function($scope,backendService,$location,Authentication,$stateParams){$scope.myCampaigns=[],$scope.authentication=Authentication,$scope.authentication.user&&$stateParams.userid||$location.path("/");var userid=$scope.authentication.user._id;backendService.getUserCampaigns(userid).success(function(myCampaigns){myCampaigns.length<1?myCampaigns=!1:($scope.myCampaigns=myCampaigns,myCampaigns=!1)}),$scope.limit=4,$scope.increment=function(){var campaignLength=$scope.myCampaigns.length;$scope.limit=campaignLength},$scope.decrement=function(){$scope.limit=4}}]),angular.module("campaign").controller("viewCampaignCtrl",["$scope","toaster","backendService","$location","Authentication","$stateParams",function($scope,toaster,backendService,$location,Authentication,$stateParams){$scope.authentication=Authentication,$scope.authentication.user&&$stateParams.campaignid||$location.path("/"),$scope.campaign={_id:$stateParams.campaignid},backendService.getCampaign($scope.campaign).success(function(data){$scope.campaign=data}).error(function(error){console.log(error)})}]),angular.module("campaign").factory("backendService",["$http",function($http){var addCampaign=function(campaignData){return $http.post("/campaign/add",campaignData)},getCampaign=function(campaignData){return $http.get("/campaign/"+campaignData._id)},deleteCampaign=function(campaignData){return $http["delete"]("/campaign/"+campaignData._id)},checkYouTubeUrl=function(videoId){return $http.get("//gdata.youtube.com/feeds/api/videos/"+videoId+"?alt=json")},getUserCampaigns=function(userid){return $http.get("/campaigns/"+userid)},getCampaigns=function(){return $http.get("/campaigns")},updateCampaign=function(campaignData){return console.log(campaignData),$http.put("/campaign/"+campaignData._id+"/edit",campaignData)};return{addCampaign:addCampaign,getCampaign:getCampaign,checkYouTubeUrl:checkYouTubeUrl,getUserCampaigns:getUserCampaigns,updateCampaign:updateCampaign,deleteCampaign:deleteCampaign,getCampaigns:getCampaigns}}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication","backendService",function($scope,Authentication,backendService){$scope.authentication=Authentication,$scope.campaigns=[],backendService.getCampaigns().success(function(data){$scope.campaigns=data}).error(function(error){$scope.error=error})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("/");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]);